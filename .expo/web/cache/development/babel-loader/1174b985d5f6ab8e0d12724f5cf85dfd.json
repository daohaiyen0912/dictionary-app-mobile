{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as Speech from \"expo-speech\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon } from \"react-native-elements\";\nimport wordApi from \"../../Api/WordApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function WordMeaningScreen(props) {\n  var _trans$meaning;\n\n  var route = props.route,\n      navigation = props.navigation;\n  var text = route.params.text;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      trans = _React$useState2[0],\n      setTrans = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      synonyms = _React$useState4[0],\n      setSynonyms = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      antonyms = _React$useState6[0],\n      setAntonyms = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      colorIconHeart = _React$useState8[0],\n      setColorIconHeart = _React$useState8[1];\n\n  var handleTextToSpeech = React.useCallback(function (word) {\n    Speech.speak(word);\n  }, []);\n  var handleBackToSearchScreen = React.useCallback(function () {\n    navigation.goBack();\n  }, []);\n  var handleGoToEdit = React.useCallback(function (value) {\n    navigation.navigate(\"Edit\", {\n      text: value\n    });\n  }, []);\n  var handleAddToFavorite = React.useCallback(function (text) {\n    wordApi.like(text).then(function (response) {\n      alert(\"You liked\" + (\"\\\"\" + response + \"\\\"\"));\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n      alert(error.message);\n    });\n    setColorIconHeart(\"red\");\n    wordApi.search(text).then(function (response) {\n      setTrans(response.at(0));\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n      alert(error.message);\n    });\n  }, []);\n  var handleRemoveFromFavorite = React.useCallback(function (text) {\n    wordApi.unlike(text).then(function (response) {\n      alert(\"You unliked\" + (\"\\\"\" + response + \"\\\"\"));\n      setColorIconHeart(\"black\");\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n      alert(error.message);\n    });\n    setColorIconHeart(\"black\");\n    wordApi.search(text).then(function (response) {\n      setTrans(response.at(0));\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n      alert(error.message);\n    });\n  }, []);\n  var handleDeleteWord = React.useCallback(function (text) {\n    wordApi.delete(text).then(function (response) {\n      alert(\"Delete word successfully\");\n    }).catch(function (error) {\n      console.log(\"Api call error\");\n      alert(error.message);\n    });\n    navigation.goBack();\n  }, []);\n  React.useEffect(function () {\n    var fetchData = function fetchData() {\n      wordApi.search(text).then(function (response) {\n        var _response$at;\n\n        setTrans(response.at(0));\n        ((_response$at = response.at(0)) == null ? void 0 : _response$at.favorite) === 1 ? setColorIconHeart(\"red\") : setColorIconHeart(\"black\");\n      }).catch(function (error) {\n        console.log(\"Api call error\");\n        alert(error.message);\n      });\n      wordApi.symnonym(text).then(function (response) {\n        setSynonyms(response.data.definitionData.definitions.at(0).synonyms || \"\");\n        setAntonyms(response.data.definitionData.definitions.at(0).antonyms || \"\");\n      }).catch(function (error) {});\n    };\n\n    fetchData();\n  }, []);\n  var meaning = trans != null && trans.meaning ? trans == null ? void 0 : (_trans$meaning = trans.meaning) == null ? void 0 : _trans$meaning.split('{\"/n\"}') : [\"\"];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.boxContainer,\n      children: [(trans == null ? void 0 : trans.changeAble) === 1 && _jsx(View, {\n        style: styles.boxIconUser,\n        children: _jsx(Icon, {\n          size: 20,\n          color: \"#9ACD32\",\n          raised: true,\n          name: \"user\",\n          type: \"font-awesome\",\n          tvParallaxProperties: undefined\n        })\n      }), _jsxs(View, {\n        style: styles.boxWord,\n        children: [_jsx(View, {\n          children: _jsx(Text, {\n            style: styles.word,\n            children: trans == null ? void 0 : trans.word\n          })\n        }), (trans == null ? void 0 : trans.changeAble) === 1 && _jsx(Icon, {\n          size: 16,\n          raised: true,\n          name: \"create-outline\",\n          type: \"ionicon\",\n          onPress: function onPress() {\n            return handleGoToEdit(trans == null ? void 0 : trans.word);\n          },\n          tvParallaxProperties: undefined\n        }), (trans == null ? void 0 : trans.changeAble) === 1 && _jsx(Icon, {\n          size: 16,\n          raised: true,\n          name: \"close\",\n          type: \"font-awesome\",\n          onPress: function onPress() {\n            return handleDeleteWord(trans == null ? void 0 : trans.word);\n          },\n          tvParallaxProperties: undefined\n        }), _jsx(Icon, {\n          size: 16,\n          raised: true,\n          name: \"play\",\n          type: \"font-awesome\",\n          onPress: function onPress() {\n            return handleTextToSpeech(trans == null ? void 0 : trans.word);\n          },\n          tvParallaxProperties: undefined\n        }), _jsx(Icon, {\n          color: colorIconHeart,\n          size: 16,\n          raised: true,\n          name: \"heart\",\n          type: \"font-awesome\",\n          onPress: (trans == null ? void 0 : trans.favorite) === 1 ? function () {\n            return handleRemoveFromFavorite(text);\n          } : function () {\n            return handleAddToFavorite(text);\n          },\n          tvParallaxProperties: undefined\n        })]\n      }), _jsxs(View, {\n        style: styles.boxTrans,\n        children: [_jsx(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: _jsx(View, {\n            style: styles.boxPronunciation,\n            children: _jsx(Text, {\n              children: trans == null ? void 0 : trans.pronunciation\n            })\n          })\n        }), _jsxs(ScrollView, {\n          style: styles.scrollView,\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.tagMeaning,\n              children: \"#meaning\"\n            }), meaning && (meaning == null ? void 0 : meaning.map(function (item) {\n              return _jsx(_Fragment, {\n                children: _jsx(Text, {\n                  children: item\n                }, item)\n              });\n            }))]\n          }), _jsx(Text, {\n            style: styles.tagMeaning,\n            children: \"#symnonym\"\n          }), _jsxs(View, {\n            style: styles.containerSynonyms,\n            children: [(trans == null ? void 0 : trans.changeAble) === 0 && synonyms && synonyms.map(function (item) {\n              return _jsx(View, {\n                children: _jsx(Text, {\n                  children: \"| \" + item.term + \" \"\n                }, item.term)\n              });\n            }), (trans == null ? void 0 : trans.changeAble) === 1 && _jsx(View, {\n              children: _jsx(Text, {\n                children: trans == null ? void 0 : trans.synonym\n              })\n            })]\n          }), _jsx(Text, {\n            style: styles.tagMeaning,\n            children: \"#antonyms\"\n          }), _jsxs(View, {\n            style: styles.containerSynonyms,\n            children: [(trans == null ? void 0 : trans.changeAble) === 0 && antonyms && antonyms.map(function (item) {\n              return _jsx(View, {\n                children: _jsx(Text, {\n                  children: \"| \" + item.term + \" \"\n                }, item.term)\n              });\n            }), (trans == null ? void 0 : trans.changeAble) === 1 && _jsx(View, {\n              children: _jsx(Text, {\n                children: trans == null ? void 0 : trans.antonyms\n              })\n            })]\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\"\n          },\n          children: _jsx(Icon, {\n            size: 35,\n            raised: true,\n            name: \"arrow-back-circle-outline\",\n            type: \"ionicon\",\n            onPress: handleBackToSearchScreen,\n            tvParallaxProperties: undefined\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 3,\n    backgroundColor: \"rgb(39, 44, 82)\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  boxContainer: {\n    width: \"80%\",\n    marginTop: 50,\n    marginBottom: 50,\n    flex: 1,\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: 15,\n    padding: 20\n  },\n  boxWord: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderColor: \"grey\"\n  },\n  boxIconUser: {\n    marginTop: -40,\n    marginLeft: -50,\n    marginBottom: -20\n  },\n  word: {\n    color: \"#393318\",\n    marginBottom: 5,\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  boxTrans: {\n    marginTop: 10,\n    flexDirection: \"column\"\n  },\n  boxPronunciation: {\n    marginTop: 10,\n    marginBottom: 10,\n    flexDirection: \"column\"\n  },\n  scrollView: {\n    height: 550\n  },\n  tagMeaning: {\n    backgroundColor: \"#f7d749\",\n    width: 120,\n    padding: 10,\n    marginTop: 5,\n    borderRadius: 5,\n    fontWeight: \"bold\",\n    marginBottom: 5\n  },\n  containerSynonyms: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginBottom: 5,\n    marginTop: 5,\n    borderRadius: 5,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/PC/Desktop/MobileYen/gitbash/dictionary-app/src/View/WordMeaningScreen/WordMeaningScreen.tsx"],"names":["Speech","React","Icon","wordApi","WordMeaningScreen","props","route","navigation","text","params","useState","trans","setTrans","synonyms","setSynonyms","antonyms","setAntonyms","colorIconHeart","setColorIconHeart","handleTextToSpeech","useCallback","word","speak","handleBackToSearchScreen","goBack","handleGoToEdit","value","navigate","handleAddToFavorite","like","then","response","alert","catch","error","console","log","message","search","at","handleRemoveFromFavorite","unlike","handleDeleteWord","delete","useEffect","fetchData","favorite","symnonym","data","definitionData","definitions","meaning","split","styles","container","boxContainer","changeAble","boxIconUser","undefined","boxWord","boxTrans","flexDirection","boxPronunciation","pronunciation","scrollView","tagMeaning","map","item","containerSynonyms","term","synonym","flex","alignItems","StyleSheet","create","backgroundColor","width","marginTop","marginBottom","borderRadius","padding","borderBottomWidth","borderColor","marginLeft","color","fontSize","fontWeight","height","flexWrap"],"mappings":"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","sourcesContent":["import { StackScreenProps } from \"@react-navigation/stack\";\r\nimport * as Speech from \"expo-speech\";\r\nimport React, { PropsWithChildren } from \"react\";\r\nimport {\r\n  Alert,\r\n  Modal,\r\n  Pressable,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,\r\n} from \"react-native\";\r\nimport { Icon } from \"react-native-elements\";\r\nimport wordApi from \"../../Api/WordApi\";\r\nimport { Synonym } from \"../../Models/Thesaurus/Synonym\";\r\nimport { Word } from \"../../Models/Word/Word\";\r\n\r\nexport default function WordMeaningScreen(\r\n  props: PropsWithChildren<WordMeaningViewProps>\r\n) {\r\n  const { route, navigation } = props;\r\n  const { text } = route.params;\r\n  const [trans, setTrans] = React.useState<Word>();\r\n  const [synonyms, setSynonyms] = React.useState<Synonym[]>();\r\n  const [antonyms, setAntonyms] = React.useState<Synonym[]>();\r\n  const [colorIconHeart, setColorIconHeart] = React.useState(\"\");\r\n\r\n  const handleTextToSpeech = React.useCallback((word) => {\r\n    Speech.speak(word);\r\n  }, []);\r\n\r\n  const handleBackToSearchScreen = React.useCallback(() => {\r\n    navigation.goBack();\r\n  }, []);\r\n\r\n  const handleGoToEdit = React.useCallback((value: string) => {\r\n    navigation.navigate(\"Edit\", {\r\n      text: value,\r\n    });\r\n  }, []);\r\n\r\n  const handleAddToFavorite = React.useCallback((text) => {\r\n    wordApi\r\n      .like(text)\r\n      .then((response: any) => {\r\n        alert(\"You liked\" + `\"${response}\"`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api call error\");\r\n        alert(error.message);\r\n      });\r\n    setColorIconHeart(\"red\");\r\n\r\n    wordApi\r\n      .search(text)\r\n      .then((response: any) => {\r\n        setTrans(response.at(0));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api call error\");\r\n        alert(error.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleRemoveFromFavorite = React.useCallback((text) => {\r\n    wordApi\r\n      .unlike(text)\r\n      .then((response: any) => {\r\n        alert(\"You unliked\" + `\"${response}\"`);\r\n        setColorIconHeart(\"black\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api call error\");\r\n        alert(error.message);\r\n      });\r\n    setColorIconHeart(\"black\");\r\n    wordApi\r\n      .search(text)\r\n      .then((response: any) => {\r\n        setTrans(response.at(0));\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api call error\");\r\n        alert(error.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleDeleteWord = React.useCallback((text) => {\r\n    wordApi\r\n      .delete(text)\r\n      .then((response: any) => {\r\n        alert(\"Delete word successfully\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Api call error\");\r\n        alert(error.message);\r\n      });\r\n    navigation.goBack();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = () => {\r\n      wordApi\r\n        .search(text)\r\n        .then((response: any) => {\r\n          setTrans(response.at(0));\r\n          response.at(0)?.favorite === 1\r\n            ? setColorIconHeart(\"red\")\r\n            : setColorIconHeart(\"black\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Api call error\");\r\n          alert(error.message);\r\n        });\r\n\r\n      wordApi\r\n        .symnonym(text)\r\n        .then((response: any) => {\r\n          setSynonyms(\r\n            response.data.definitionData.definitions.at(0).synonyms || \"\"\r\n          );\r\n          setAntonyms(\r\n            response.data.definitionData.definitions.at(0).antonyms || \"\"\r\n          );\r\n        })\r\n        .catch((error) => {});\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const meaning = trans?.meaning ? trans?.meaning?.split('{\"/n\"}') : [\"\"];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.boxContainer}>\r\n        {trans?.changeAble === 1 && (\r\n          <View style={styles.boxIconUser}>\r\n            <Icon\r\n              size={20}\r\n              color=\"#9ACD32\"\r\n              raised\r\n              name=\"user\"\r\n              type=\"font-awesome\"\r\n              tvParallaxProperties={undefined}\r\n            />\r\n          </View>\r\n        )}\r\n        <View style={styles.boxWord}>\r\n          <View>\r\n            <Text style={styles.word}>{trans?.word}</Text>\r\n          </View>\r\n\r\n          {trans?.changeAble === 1 && (\r\n            <Icon\r\n              size={16}\r\n              raised\r\n              name=\"create-outline\"\r\n              type=\"ionicon\"\r\n              onPress={() => handleGoToEdit(trans?.word as string)}\r\n              tvParallaxProperties={undefined}\r\n            />\r\n          )}\r\n\r\n          {trans?.changeAble === 1 && (\r\n            <Icon\r\n              size={16}\r\n              raised\r\n              name=\"close\"\r\n              type=\"font-awesome\"\r\n              onPress={() => handleDeleteWord(trans?.word)}\r\n              tvParallaxProperties={undefined}\r\n            />\r\n          )}\r\n\r\n          <Icon\r\n            size={16}\r\n            raised\r\n            name=\"play\"\r\n            type=\"font-awesome\"\r\n            onPress={() => handleTextToSpeech(trans?.word)}\r\n            tvParallaxProperties={undefined}\r\n          />\r\n\r\n          <Icon\r\n            color={colorIconHeart}\r\n            size={16}\r\n            raised\r\n            name=\"heart\"\r\n            type=\"font-awesome\"\r\n            onPress={\r\n              trans?.favorite === 1\r\n                ? () => handleRemoveFromFavorite(text)\r\n                : () => handleAddToFavorite(text)\r\n            }\r\n            tvParallaxProperties={undefined}\r\n          />\r\n        </View>\r\n        <View style={styles.boxTrans}>\r\n          <View style={{ flexDirection: \"row\" }}>\r\n            <View style={styles.boxPronunciation}>\r\n              <Text>{trans?.pronunciation}</Text>\r\n            </View>\r\n          </View>\r\n\r\n          <ScrollView style={styles.scrollView}>\r\n            <View>\r\n              <Text style={styles.tagMeaning}>#meaning</Text>\r\n              {meaning &&\r\n                meaning?.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <Text key={item}>{item}</Text>\r\n                    </>\r\n                  );\r\n                })}\r\n            </View>\r\n            <Text style={styles.tagMeaning}>#symnonym</Text>\r\n            <View style={styles.containerSynonyms}>\r\n              {trans?.changeAble === 0 &&\r\n                synonyms &&\r\n                synonyms.map((item) => {\r\n                  return (\r\n                    <View>\r\n                      <Text key={item.term}>{\"| \" + item.term + \" \"}</Text>\r\n                    </View>\r\n                  );\r\n                })}\r\n              {trans?.changeAble === 1 && (\r\n                <View>\r\n                  <Text>{trans?.synonym}</Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n\r\n            <Text style={styles.tagMeaning}>#antonyms</Text>\r\n            <View style={styles.containerSynonyms}>\r\n              {trans?.changeAble === 0 &&\r\n                antonyms &&\r\n                antonyms.map((item) => {\r\n                  return (\r\n                    <View>\r\n                      <Text key={item.term}>{\"| \" + item.term + \" \"}</Text>\r\n                    </View>\r\n                  );\r\n                })}\r\n              {trans?.changeAble === 1 && (\r\n                <View>\r\n                  <Text>{trans?.antonyms}</Text>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </ScrollView>\r\n          <View style={{ flex: 1, alignItems: \"center\" }}>\r\n            <Icon\r\n              size={35}\r\n              raised\r\n              name=\"arrow-back-circle-outline\"\r\n              type=\"ionicon\"\r\n              onPress={handleBackToSearchScreen}\r\n              tvParallaxProperties={undefined}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport interface WordMeaningViewParams {\r\n  text: string;\r\n}\r\n\r\nexport interface WordMeaningViewProps\r\n  extends StackScreenProps<Record<string, WordMeaningViewParams>> {}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 3,\r\n    backgroundColor: \"rgb(39, 44, 82)\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  boxContainer: {\r\n    width: \"80%\",\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n    flex: 1,\r\n    backgroundColor: \"#f9f9f9\",\r\n    borderRadius: 15,\r\n    padding: 20,\r\n  },\r\n  boxWord: {\r\n    flexDirection: \"row\",\r\n    borderBottomWidth: 1,\r\n    borderColor: \"grey\",\r\n  },\r\n  boxIconUser: {\r\n    marginTop: -40,\r\n    marginLeft: -50,\r\n    marginBottom: -20,\r\n  },\r\n  word: {\r\n    color: \"#393318\",\r\n    marginBottom: 5,\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n  boxTrans: {\r\n    marginTop: 10,\r\n    flexDirection: \"column\",\r\n  },\r\n  boxPronunciation: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    flexDirection: \"column\",\r\n  },\r\n  scrollView: {\r\n    height: 550,\r\n  },\r\n  tagMeaning: {\r\n    backgroundColor: \"#f7d749\",\r\n    width: 120,\r\n    padding: 10,\r\n    marginTop: 5,\r\n    borderRadius: 5,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  containerSynonyms: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginBottom: 5,\r\n    marginTop: 5,\r\n    borderRadius: 5,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}