{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport axios from \"axios\";\nvar BASE_URL = \"https://dictionary-server-app.herokuapp.com/words/\";\n\nvar TransParagraphApi = _createClass(function TransParagraphApi() {\n  _classCallCheck(this, TransParagraphApi);\n\n  this.trans = function (text, source, target) {\n    var url = \"https://script.google.com/macros/s/AKfycbyYd8VhpEnQ057AURLU6ASgE7c5pdcBHpL47-zs_7tCB3ekgR8S/exec?q=\" + text + \"&target=\" + target + \"&source=\" + source;\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n});\n\nvar transParagraphApi = new TransParagraphApi();\nexport default transParagraphApi;","map":{"version":3,"sources":["C:/Users/PC/Desktop/MobileYen/gitbash/dictionary-app/src/Api/TransParagraphApi.ts"],"names":["axios","BASE_URL","TransParagraphApi","trans","text","source","target","url","console","log","get","then","response","data","catch","error","transParagraphApi"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,QAAQ,GAAG,oDAAjB;;IACMC,iB;;;OACJC,K,GAAQ,UAACC,IAAD,EAAgBC,MAAhB,EAAiCC,MAAjC,EAAqD;AAC3D,QAAMC,GAAG,GAAG,wGAAwGH,IAAxG,GAA+G,UAA/G,GAA2HE,MAA3H,GAAoI,UAApI,GAAiJD,MAA7J;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOP,KAAK,CACTU,GADI,CAEHH,GAFG,EAIJI,IAJI,CAIC,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAvB;AAAA,KAJD,EAKJC,KALI,CAKE,UAASC,KAAT,EAAgB;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AAAmB,KANhB,CAAP;AAOD,G;;;AAGH,IAAMC,iBAAiB,GAAG,IAAId,iBAAJ,EAA1B;AACA,eAAec,iBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://dictionary-server-app.herokuapp.com/words/\"\r\nclass TransParagraphApi {\r\n  trans = (text?: string, source?: string, target?: string) => {\r\n    const url = \"https://script.google.com/macros/s/AKfycbyYd8VhpEnQ057AURLU6ASgE7c5pdcBHpL47-zs_7tCB3ekgR8S/exec?q=\" + text + \"&target=\" +target + \"&source=\" + source;\r\n    console.log(url);\r\n    return axios\r\n      .get(\r\n        url,\r\n      )\r\n      .then((response) => response.data)\r\n      .catch(function(error) {\r\n        console.log(error)})\r\n  };\r\n}\r\n\r\nconst transParagraphApi = new TransParagraphApi();\r\nexport default transParagraphApi;"]},"metadata":{},"sourceType":"module"}