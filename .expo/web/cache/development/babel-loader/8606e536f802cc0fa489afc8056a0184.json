{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from \"react-native-elements\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SearchComponent(props) {\n  var textInput = props.textInput,\n      _onPress = props.onPress,\n      wordSearchList = props.wordSearchList,\n      wordRecentList = props.wordRecentList;\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      style: styles.searchContainer,\n      data: textInput ? wordSearchList : wordRecentList,\n      renderItem: function renderItem(_ref) {\n        var _item$pronunciation, _item$subMeaning;\n\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _onPress(item.word);\n          },\n          children: _jsxs(View, {\n            style: styles.wordListContainer,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: \"row\"\n              },\n              children: [_jsxs(Text, {\n                style: styles.wordListWord,\n                children: [\" \", item.word]\n              }), _jsx(View, {\n                style: {\n                  marginTop: -10\n                },\n                children: (item == null ? void 0 : item.changeAble) === 1 && _jsx(Icon, {\n                  size: 10,\n                  color: \"#9ACD32\",\n                  raised: true,\n                  name: \"user\",\n                  type: \"font-awesome\",\n                  tvParallaxProperties: undefined\n                })\n              })]\n            }), _jsxs(Text, {\n              children: [\" \", item == null ? void 0 : (_item$pronunciation = item.pronunciation) == null ? void 0 : _item$pronunciation.slice(1, 20), \" \"]\n            }), _jsxs(Text, {\n              children: [\" \", item == null ? void 0 : (_item$subMeaning = item.subMeaning) == null ? void 0 : _item$subMeaning.slice(1, 50), \" \"]\n            })]\n          })\n        }, item.word);\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  searchContainer: {\n    backgroundColor: \"#d7d9db\",\n    height: 70,\n    marginBottom: 220,\n    width: 240\n  },\n  wordListContainer: {\n    margin: 10,\n    marginTop: 5,\n    marginBottom: 15,\n    borderBottomColor: \"#a1a4a4\",\n    borderBottomWidth: 1,\n    position: \"absolute\"\n  },\n  wordListWord: {\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/PC/Desktop/MobileYen/gitbash/dictionary-app/src/View/HomeScreen/SearchComponent.tsx"],"names":["React","Icon","SearchComponent","props","textInput","onPress","wordSearchList","wordRecentList","styles","searchContainer","item","word","wordListContainer","flexDirection","wordListWord","marginTop","changeAble","undefined","pronunciation","slice","subMeaning","index","toString","StyleSheet","create","backgroundColor","height","marginBottom","width","margin","borderBottomColor","borderBottomWidth","position","fontWeight"],"mappings":"AAAA,OAAOA,KAAP,MAAyC,OAAzC;;;;;;AAeA,SAASC,IAAT,QAAqB,uBAArB;;;AAEA,eAAe,SAASC,eAAT,CACbC,KADa,EAEb;AACA,MAAQC,SAAR,GAA+DD,KAA/D,CAAQC,SAAR;AAAA,MAAmBC,QAAnB,GAA+DF,KAA/D,CAAmBE,OAAnB;AAAA,MAA4BC,cAA5B,GAA+DH,KAA/D,CAA4BG,cAA5B;AAAA,MAA4CC,cAA5C,GAA+DJ,KAA/D,CAA4CI,cAA5C;AAEA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAEC,MAAM,CAACC,eADhB;AAEE,MAAA,IAAI,EAAEL,SAAS,GAAGE,cAAH,GAAoBC,cAFrC;AAGE,MAAA,UAAU,EAAE;AAAA;;AAAA,YAAGG,IAAH,QAAGA,IAAH;AAAA,eACV,KAAC,gBAAD;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAML,QAAO,CAACK,IAAI,CAACC,IAAN,CAAb;AAAA,WAFX;AAAA,oBAIE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,iBAApB;AAAA,uBACE,MAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,aAAa,EAAE;AAAjB,eAAb;AAAA,yBACE,MAAC,IAAD;AAAM,gBAAA,KAAK,EAAEL,MAAM,CAACM,YAApB;AAAA,gCAAoCJ,IAAI,CAACC,IAAzC;AAAA,gBADF,EAEE,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAAEI,kBAAAA,SAAS,EAAE,CAAC;AAAd,iBAAb;AAAA,0BACG,CAAAL,IAAI,QAAJ,YAAAA,IAAI,CAAEM,UAAN,MAAqB,CAArB,IACC,KAAC,IAAD;AACE,kBAAA,IAAI,EAAE,EADR;AAEE,kBAAA,KAAK,EAAC,SAFR;AAGE,kBAAA,MAAM,MAHR;AAIE,kBAAA,IAAI,EAAC,MAJP;AAKE,kBAAA,IAAI,EAAC,cALP;AAME,kBAAA,oBAAoB,EAAEC;AANxB;AAFJ,gBAFF;AAAA,cADF,EAgBE,MAAC,IAAD;AAAA,8BAAQP,IAAR,2CAAQA,IAAI,CAAEQ,aAAd,qBAAQ,oBAAqBC,KAArB,CAA2B,CAA3B,EAA8B,EAA9B,CAAR;AAAA,cAhBF,EAiBE,MAAC,IAAD;AAAA,8BAAQT,IAAR,wCAAQA,IAAI,CAAEU,UAAd,qBAAQ,iBAAkBD,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B,CAAR;AAAA,cAjBF;AAAA;AAJF,WACOT,IAAI,CAACC,IADZ,CADU;AAAA,OAHd;AA6BE,MAAA,YAAY,EAAE,sBAACD,IAAD,EAAOW,KAAP;AAAA,eAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA;AA7BhB;AADF,IADF;AAmCD;AASD,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,eAAe,EAAE;AACfgB,IAAAA,eAAe,EAAE,SADF;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfC,IAAAA,YAAY,EAAE,GAHC;AAIfC,IAAAA,KAAK,EAAE;AAJQ,GADc;AAO/BhB,EAAAA,iBAAiB,EAAE;AACjBiB,IAAAA,MAAM,EAAE,EADS;AAEjBd,IAAAA,SAAS,EAAE,CAFM;AAGjBY,IAAAA,YAAY,EAAE,EAHG;AAIjBG,IAAAA,iBAAiB,EAAE,SAJF;AAKjBC,IAAAA,iBAAiB,EAAE,CALF;AAMjBC,IAAAA,QAAQ,EAAE;AANO,GAPY;AAe/BlB,EAAAA,YAAY,EAAE;AACZmB,IAAAA,UAAU,EAAE;AADA;AAfiB,CAAlB,CAAf","sourcesContent":["import React, { PropsWithChildren } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  SafeAreaView,\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport wordApi from \"../../Api/WordApi\";\r\nimport { Word } from \"../../Models/Word/Word\";\r\nimport axios from \"axios\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nexport default function SearchComponent(\r\n  props: PropsWithChildren<SearchComponentProps>\r\n) {\r\n  const { textInput, onPress, wordSearchList, wordRecentList } = props;\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        style={styles.searchContainer}\r\n        data={textInput ? wordSearchList : wordRecentList}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            key={item.word}\r\n            onPress={() => onPress(item.word as string)}\r\n          >\r\n            <View style={styles.wordListContainer}>\r\n              <View style={{ flexDirection: \"row\" }}>\r\n                <Text style={styles.wordListWord}> {item.word}</Text>\r\n                <View style={{ marginTop: -10 }}>\r\n                  {item?.changeAble === 1 && (\r\n                    <Icon\r\n                      size={10}\r\n                      color=\"#9ACD32\"\r\n                      raised\r\n                      name=\"user\"\r\n                      type=\"font-awesome\"\r\n                      tvParallaxProperties={undefined}\r\n                    />\r\n                  )}\r\n                </View>\r\n              </View>\r\n              <Text> {item?.pronunciation?.slice(1, 20)} </Text>\r\n              <Text> {item?.subMeaning?.slice(1, 50)} </Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        )}\r\n        keyExtractor={(item, index) => index.toString()}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nexport interface SearchComponentProps {\r\n  textInput?: string;\r\n  onPress: (value: string) => void;\r\n  wordSearchList?: Word[];\r\n  wordRecentList?: Word[];\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n    backgroundColor: \"#d7d9db\",\r\n    height: 70,\r\n    marginBottom: 220,\r\n    width: 240,\r\n  },\r\n  wordListContainer: {\r\n    margin: 10,\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    borderBottomColor: \"#a1a4a4\",\r\n    borderBottomWidth: 1,\r\n    position: \"absolute\"\r\n  },\r\n  wordListWord: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}