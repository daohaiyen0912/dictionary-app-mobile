{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport axios from \"axios\";\nvar BASE_URL = \"http://localhost:3001/\";\n\nvar WordApi = _createClass(function WordApi() {\n  _classCallCheck(this, WordApi);\n\n  this.lookUp = function (word) {\n    var url = BASE_URL + \"lookUp/\" + word;\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.search = function (word) {\n    var url = BASE_URL + \"search/\" + word;\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.symnonym = function (word) {\n    var url = \"https://tuna.thesaurus.com/pageData/\" + word;\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.recent = function () {\n    var url = BASE_URL + \"recent\";\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.favorite = function () {\n    var url = BASE_URL + \"favorite\";\n    console.log(url);\n    return axios.get(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.like = function (word) {\n    var url = BASE_URL + \"like/\" + word;\n    console.log(url);\n    return axios.put(url, {\n      word: word\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.unlike = function (word) {\n    var url = BASE_URL + \"unlike/\" + word;\n    console.log(url);\n    return axios.put(url, {\n      word: word\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.add = function (word, pronunciation, meaning, synonym, antonyms) {\n    var url = BASE_URL + \"add\";\n    console.log(url);\n    return axios.post(url, {\n      word: word,\n      pronunciation: pronunciation,\n      meaning: meaning,\n      synonym: synonym,\n      antonyms: antonyms\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.update = function (oldWord, word, pronunciation, meaning, synonym, antonyms) {\n    var url = BASE_URL + \"update/\" + oldWord;\n    console.log(url);\n    return axios.put(url, {\n      word: word,\n      pronunciation: pronunciation,\n      meaning: meaning,\n      synonym: synonym,\n      antonyms: antonyms\n    }).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  this.delete = function (word) {\n    var url = BASE_URL + \"delete/\" + word;\n    console.log(url);\n    return axios.delete(url).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n});\n\nvar wordApi = new WordApi();\nexport default wordApi;","map":{"version":3,"sources":["C:/Users/PC/Desktop/MobileYen/gitbash/dictionary-app/src/Api/WordApi.ts"],"names":["axios","BASE_URL","WordApi","lookUp","word","url","console","log","get","then","response","data","catch","error","search","symnonym","recent","favorite","like","put","unlike","add","pronunciation","meaning","synonym","antonyms","post","update","oldWord","delete","wordApi"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:3001/\";\r\nclass WordApi {\r\n  lookUp = (word?: string) => {\r\n    const url = BASE_URL + \"lookUp/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .get(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  search = (word?: string) => {\r\n    const url = BASE_URL + \"search/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .get(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  symnonym = (word?: string) => {\r\n    const url = \"https://tuna.thesaurus.com/pageData/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .get(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  recent = () => {\r\n    const url = BASE_URL + \"recent\";\r\n    console.log(url);\r\n    return axios\r\n      .get(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  favorite = () => {\r\n    const url = BASE_URL + \"favorite\";\r\n    console.log(url);\r\n    return axios\r\n      .get(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  like = (word?: string) => {\r\n    const url = BASE_URL + \"like/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .put(url, {\r\n        word,\r\n      })\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  unlike = (word?: string) => {\r\n    const url = BASE_URL + \"unlike/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .put(url, {\r\n        word,\r\n      })\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  add = (\r\n    word?: string,\r\n    pronunciation?: string,\r\n    meaning?: string,\r\n    synonym?: string,\r\n    antonyms?: string\r\n  ) => {\r\n    const url = BASE_URL + \"add\";\r\n    console.log(url);\r\n    return axios\r\n      .post(url, {\r\n        word,\r\n        pronunciation,\r\n        meaning,\r\n        synonym,\r\n        antonyms,\r\n      })\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  update = (\r\n    oldWord?: string,\r\n    word?: string,\r\n    pronunciation?: string,\r\n    meaning?: string,\r\n    synonym?: string,\r\n    antonyms?: string\r\n  ) => {\r\n    const url = BASE_URL + \"update/\" + oldWord;\r\n    console.log(url);\r\n    return axios\r\n      .put(url, {\r\n        word,\r\n        pronunciation,\r\n        meaning,\r\n        synonym,\r\n        antonyms,\r\n      })\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  delete = (word?: string) => {\r\n    const url = BASE_URL + \"delete/\" + word;\r\n    console.log(url);\r\n    return axios\r\n      .delete(url)\r\n      .then((response) => response.data)\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\n\r\nconst wordApi = new WordApi();\r\nexport default wordApi;\r\n"]},"metadata":{},"sourceType":"module"}